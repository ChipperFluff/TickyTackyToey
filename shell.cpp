#include <iostream>
#include <fstream>
#include <csignal>
#include <termios.h>
#include <unistd.h>
#include <filesystem>

#include "embedded_jar.h"  // generated by xxd -i

namespace fs = std::filesystem;
const std::string tempJarPath = "/tmp/tickitakytoe_embedded.jar";

struct TermControl {
    struct termios orig;
    TermControl() {
        tcgetattr(STDIN_FILENO, &orig);
        termios raw = orig;
        raw.c_lflag &= ~(ICANON | ECHO);
        tcsetattr(STDIN_FILENO, TCSANOW, &raw);
    }
    ~TermControl() {
        tcsetattr(STDIN_FILENO, TCSANOW, &orig);
        std::cout << "\033[0m" << std::endl;
    }
};

void writeJarFromMemory() {
    std::ofstream out(tempJarPath, std::ios::binary);
    out.write(reinterpret_cast<const char*>(cmp_tickitakytoe_jar), cmp_tickitakytoe_jar_len);
    out.close();
}

int main() {
    signal(SIGINT, [](int) {
        std::cout << "\033[0m" << std::endl;
        std::system("stty sane");
        std::exit(1);
    });

    TermControl term;
    writeJarFromMemory();

    int result = std::system(("java -jar " + tempJarPath).c_str());
    fs::remove(tempJarPath);
    return result;
}
